{"version":3,"sources":["components/Case.js","actions/index.js","components/Board.js","aditionalfunctions/index.js","components/Level.js","components/materials/Circle.js","components/materials/Switch.js","components/Opponent.js","components/Settings.js","components/GameBarDefault.js","components/GameBarFooter.js","components/GameBarHeader.js","components/materials/TricolorBar.js","components/GameBar.js","components/GeneralStatistics.js","components/Statistics.js","components/Game.js","App.js","reportWebVitals.js","reducers/game.js","reducers/statistics.js","reducers/isAiPlaying.js","reducers/level.js","reducers/index.js","index.js"],"names":["Case","pos","value","lastplayed","playAtPosition","className","onClick","e","play","type","Board","game","useSelector","state","isAiPlaying","dispatch","level","useDispatch","isGameOver","player","aiTurn","board","emptyPositions","positions","forEach","arr","x","y","push","getEmptyPositions","length","Math","floor","random","aiPlays","setTimeout","useEffect","gameIsOver","movesCount","status","result","types","gameStatus","lastMove","map","xKey","yKey","key","lastPlayed","Level","useState","setLevel","min","max","step","onChange","labels","0","100","200","tooltip","onChangeComplete","Circle","Switch","on","Opponent","Settings","GameBarDefault","wins","losses","draws","GameBarFooter","games","style","flex","toFixed","GameBarHeader","TricolorBar","GameBar","statistics","GeneralStatistics","rating","Statistics","Game","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","gameReducer","action","slice","statisticsReducer","isAiPlayingReducer","actiion","levelReduicer","allReducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e29706a9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Case({ pos, value, lastplayed, playAtPosition }) {\r\n    const handleClick = e => {\r\n        if (value !== '') return\r\n        playAtPosition(pos)\r\n    }\r\n    return (\r\n        <div\r\n            className={(\r\n                lastplayed ? \"case last-played-case\" : \"case\")\r\n                + (value === 'x' ? \" blue\" : value === 'o' ? \" red\" : \"\"\r\n                )}\r\n            onClick={handleClick}\r\n        >\r\n            <p>{value}</p>\r\n        </div>\r\n    )\r\n}\r\n","// game actions\r\nexport const setGame = game => {\r\n    return {\r\n        type: 'SET',\r\n        game\r\n    }\r\n}\r\nexport const play = (pos) => {\r\n    return {\r\n        type: 'PLAY',\r\n        pos,\r\n    }\r\n}\r\nexport const switchPlayer = () => {\r\n    return {\r\n        type: 'SWITCH'\r\n    }\r\n}\r\nexport const resetGame = () => {\r\n    return {\r\n        type: 'RESET'\r\n    }\r\n}\r\nexport const gameOver = () => {\r\n    return {\r\n        type: 'OVER'\r\n    }\r\n}\r\n\r\n// statistics actions\r\nexport const setStatistic = (wins, losses, draws) => {\r\n    return {\r\n        type: 'SET',\r\n        statatistics: { wins, losses, draws }\r\n    }\r\n}\r\n\r\nexport const clearStatatistics = () => {\r\n    return {\r\n        type: 'CLEAR',\r\n    }\r\n}\r\n\r\nexport const wonGame = () => {\r\n    return {\r\n        type: 'WIN',\r\n    }\r\n}\r\n\r\nexport const lostGame = () => {\r\n    return {\r\n        type: 'LOST',\r\n    }\r\n}\r\n\r\nexport const drawGame = () => {\r\n    return {\r\n        type: 'DRAW',\r\n    }\r\n}\r\n\r\n// is humain playing actions\r\nexport const playWithHumain = () => {\r\n    return {\r\n        type: 'HUMAIN'\r\n    }\r\n}\r\n\r\nexport const playWithAi = () => {\r\n    return {\r\n        type: 'AI'\r\n    }\r\n}\r\n\r\n// ai level actions\r\nexport const aiPlayDumb = () => {\r\n    return {\r\n        type: 'DUMB'\r\n    }\r\n}\r\nexport const aiPlayMedium = () => {\r\n    return {\r\n        type: 'MEDIUM',\r\n    }\r\n}\r\nexport const aiPlayHard = () => {\r\n    return {\r\n        type: 'HARD'\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport Case from './Case'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { play, gameOver, wonGame, lostGame, drawGame } from '../actions'\r\nimport { gameStatus, aiPlays } from '../aditionalfunctions'\r\n\r\nexport default function Board() {\r\n    const game = useSelector(state => state.game)\r\n    const isAiPlaying = useSelector(state => state.isAiPlaying)\r\n    const level = useSelector(state => state.level)\r\n    const dispatch = useDispatch()\r\n\r\n    const playAtPosition = pos => {\r\n        if (game.isGameOver || (game.player === 'o' && isAiPlaying)) return\r\n\r\n        dispatch(play(pos))\r\n    }\r\n\r\n    const aiTurn = () => {\r\n        if (isAiPlaying && game.player === 'o') {\r\n            const pos = aiPlays(game.board, level)\r\n            if (pos) {\r\n                setTimeout(() => {\r\n                    dispatch(play(pos))\r\n                }, 500);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let gameIsOver = false\r\n        if (game.movesCount >= 5) {\r\n            if (gameStatus(game.board, game.lastMove).result === 'WIN') {\r\n                dispatch(gameOver())\r\n\r\n                if (game.board[game.lastMove.x][game.lastMove.y] === 'x') {\r\n                    dispatch(wonGame())\r\n                } else {\r\n                    dispatch(lostGame())\r\n                }\r\n                gameIsOver = true\r\n            } else if (game.movesCount === 9) {\r\n                dispatch(drawGame())\r\n                gameIsOver = true\r\n            }\r\n        }\r\n\r\n        if (!gameIsOver) aiTurn()\r\n\r\n    }, [game.player, game.movesCount, game.board, game.lastMove, dispatch])\r\n\r\n    /*useEffect(() => {\r\n        if (isAiPlaying && game.player === 'o') {\r\n            const pos = aiPlays(game.board, level)\r\n            console.log(pos)\r\n        }\r\n        console.log('called')\r\n    }, [game.player, game.board, isAiPlaying, level])*/\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            {\r\n                game.board.map((arr, xKey) => {\r\n                    return arr.map((value, yKey) => {\r\n                        const key = xKey + \",\" + yKey\r\n                        const pos = { x: xKey, y: yKey }\r\n                        const lastPlayed = game.lastMove.x === xKey && game.lastMove.y === yKey\r\n\r\n                        return (\r\n                            <Case\r\n                                key={key}\r\n                                pos={pos}\r\n                                lastplayed={lastPlayed}\r\n                                value={value}\r\n                                playAtPosition={playAtPosition}\r\n                            />\r\n                        )\r\n                    })\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const gameStatus = (board, pos) => {\r\n    const status = { result: 'UNKNOWN', types: [] }\r\n\r\n    //check column win\r\n    if (board[0][pos.y] === board[1][pos.y] && board[1][pos.y] === board[2][pos.y]) {\r\n        status.result = 'WIN'\r\n        status.types.push('col')\r\n    }\r\n\r\n    //check row win\r\n    if (board[pos.x][0] === board[pos.x][1] && board[pos.x][1] === board[pos.x][2]) {\r\n        status.result = 'WIN'\r\n        status.types.push('row')\r\n    }\r\n\r\n    //check diagno win\r\n    if (pos.x === pos.y && board[0][0] === board[1][1] && board[1][1] === board[2][2]) {\r\n        status.result = 'WIN'\r\n        status.types.push('diag')\r\n    }\r\n\r\n    //check other diagno win\r\n    if (3 - pos.x - pos.y === 1 && board[0][2] === board[1][1] && board[1][1] === board[2][0]) {\r\n        status.result = 'WIN'\r\n        status.types.push('adiag')\r\n    }\r\n\r\n    return status\r\n}\r\n\r\nexport const getEmptyPositions = board => {\r\n    const positions = []\r\n\r\n    board.forEach((arr, x) => {\r\n        arr.forEach((value, y) => {\r\n            if (value === '') positions.push({ x, y })\r\n        })\r\n    })\r\n\r\n    return positions\r\n}\r\n\r\nexport const aiPlays = (board, level) => {\r\n\r\n    if (level === 0 || true) {\r\n        const emptyPositions = getEmptyPositions(board)\r\n\r\n        if (emptyPositions.length >= 0)\r\n            return emptyPositions[Math.floor(Math.random() * emptyPositions.length)];\r\n    }\r\n\r\n    return null\r\n\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport Slider from 'react-rangeslider'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport 'react-rangeslider/lib/index.css'\r\nimport { aiPlayDumb, aiPlayMedium, aiPlayHard } from '../actions'\r\n\r\nexport default function Level() {\r\n    const [level, setLevel] = useState(useSelector(state => state.level * 100))\r\n    const dispatch = useDispatch()\r\n\r\n    const labels = {\r\n        0: 'Dumb',\r\n        100: 'Meduim',\r\n        200: 'Hard'\r\n    }\r\n\r\n    const changeLevel = e => {\r\n        if (level < 50) {\r\n            dispatch(aiPlayDumb())\r\n            setLevel(0)\r\n        }\r\n        else if (level < 150) {\r\n            dispatch(aiPlayMedium())\r\n            setLevel(100)\r\n        }\r\n        else {\r\n            dispatch(aiPlayHard())\r\n            setLevel(200)\r\n        }\r\n    }\r\n\r\n    const handleChange = level => {\r\n        setLevel(level)\r\n    }\r\n\r\n    return (\r\n        <div className=\"level\">\r\n            <h5>Ai Level</h5>\r\n            <Slider\r\n                min={0}\r\n                max={200}\r\n                step={1}\r\n                value={level}\r\n                onChange={handleChange}\r\n                labels={labels}\r\n                tooltip={false}\r\n                onChangeComplete={changeLevel}\r\n                className=\"slider\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Circle() {\r\n    return (\r\n        <div className=\"circle\">\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Circle from './Circle'\r\n\r\nexport default function Switch({ on, value, onClick }) {\r\n\r\n    return (\r\n        <div onClick={onClick}>\r\n            {\r\n                on ?\r\n                    (\r\n                        <div className=\"switch\" >\r\n                            <p className=\"value\">{value}</p>\r\n                            <Circle />\r\n                        </div>\r\n                    ) :\r\n                    (\r\n                        <div className=\"switch\" >\r\n                            <Circle />\r\n                            <p className=\"value\">{value}</p>\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Switch from './materials/Switch'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { playWithAi, playWithHumain } from '../actions'\r\n\r\nexport default function Opponent() {\r\n    const isAiPlaying = useSelector(state => state.isAiPlaying)\r\n    const dispatch = useDispatch()\r\n\r\n    const changeOpponent = e => {\r\n        if (isAiPlaying) {\r\n            dispatch(playWithHumain())\r\n        } else {\r\n            dispatch(playWithAi())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"opponent\">\r\n            <h5>Opponent</h5>\r\n            <Switch\r\n                on={isAiPlaying}\r\n                value={isAiPlaying ? 'Ai' : 'Human'}\r\n                onClick={changeOpponent}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Level from './Level'\r\nimport Opponent from './Opponent'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function Settings() {\r\n    const isAiPlaying = useSelector(state => state.isAiPlaying)\r\n    return (\r\n        <div className=\"settings\">\r\n            <Opponent />\r\n            { isAiPlaying && <Level />}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function GameBarDefault({ wins, losses, draws }) {\r\n    return (\r\n        <div className=\"default\">\r\n            <div className=\"wins\">\r\n                <p>Wins : {wins}</p>\r\n            </div>\r\n            <div className=\"draws\">\r\n                <p>Draws : {draws}</p>\r\n            </div>\r\n            <div className=\"losses\">\r\n                <p>Losses : {losses}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function GameBarFooter({ wins, losses, draws, games }) {\r\n    return (\r\n        <div className=\"footer\">\r\n            {\r\n                wins !== 0 &&\r\n                <div className=\"element wins\" style={{ flex: wins }}>\r\n                    <p>{(wins * 100 / games).toFixed(1)}% Won</p>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                draws !== 0 &&\r\n                <div className=\"element draws\" style={{ flex: draws }}>\r\n                    <p>{(draws * 100 / games).toFixed(1)}% Draw</p>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                losses !== 0 &&\r\n                <div className=\"element losses\" style={{ flex: losses }}>\r\n                    <p>{(losses * 100 / games).toFixed(1)}% Lost</p>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function GameBarHeader({ wins, losses, draws }) {\r\n    return (\r\n        <div className=\"header bold\">\r\n            {\r\n                wins !== 0 &&\r\n                <div className=\"wins\" style={{ flex: wins }}>\r\n                    <p>{wins}</p>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                draws !== 0 &&\r\n                <div className=\"draws\" style={{ flex: draws }}>\r\n                    <p>{draws}</p>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                losses !== 0 &&\r\n                <div className=\"losses\" style={{ flex: losses }}>\r\n                    <p>{losses}</p>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TricolorBar({ wins, losses, draws }) {\r\n    return (\r\n        <div className=\"tricolor-bar\">\r\n            <div className=\"bar win\" style={{ flex: wins }}></div>\r\n            <div className=\"bar draws\" style={{ flex: draws }}></div>\r\n            <div className=\"bar losses\" style={{ flex: losses }}></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport GameBarDefault from './GameBarDefault'\r\nimport GameBarFooter from './GameBarFooter'\r\nimport GameBarHeader from './GameBarHeader'\r\nimport TricolorBar from './materials/TricolorBar'\r\n\r\nexport default function GameBar() {\r\n    const games = useSelector(state => state.statistics.wins + state.statistics.losses + state.statistics.draws)\r\n    const statistics = useSelector(state => state.statistics)\r\n\r\n    return (\r\n        <div className=\"game-bar\">\r\n\r\n            {\r\n                games === 0 ?\r\n                    (\r\n                        <GameBarDefault\r\n                            wins={statistics.wins}\r\n                            losses={statistics.losses}\r\n                            draws={statistics.draws}\r\n                        />\r\n                    ) :\r\n                    (\r\n                        <div>\r\n                            <GameBarHeader\r\n                                wins={statistics.wins}\r\n                                losses={statistics.losses}\r\n                                draws={statistics.draws}\r\n                            />\r\n\r\n                            <TricolorBar\r\n                                wins={statistics.wins}\r\n                                losses={statistics.losses}\r\n                                draws={statistics.draws}\r\n                            />\r\n\r\n                            <GameBarFooter\r\n                                wins={statistics.wins}\r\n                                losses={statistics.losses}\r\n                                draws={statistics.draws}\r\n                                games={games}\r\n                            />\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function GeneralStatistics() {\r\n    const rating = useSelector(state => state.statistics.wins * 3 - state.statistics.losses * 2 + state.statistics.draws)\r\n    const games = useSelector(state => state.statistics.wins + state.statistics.losses + state.statistics.draws)\r\n\r\n    return (\r\n        <div className=\"general\">\r\n            <div className=\"infos\">\r\n                <p>Rating : </p>\r\n                <p className=\"rating\">{rating}</p>\r\n            </div>\r\n            <div className=\"infos\">\r\n                <p>Games : </p>\r\n                <p className=\"games\"> {games}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport GameBar from './GameBar'\r\nimport GeneralStatistics from './GeneralStatistics'\r\n\r\nexport default function Statistics() {\r\n\r\n    return (\r\n        <div className=\"statistics\">\r\n            <GeneralStatistics />\r\n            <GameBar />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Board from './Board'\r\nimport { useDispatch } from 'react-redux'\r\nimport { resetGame } from '../actions'\r\nimport Settings from './Settings'\r\nimport Statistics from './Statistics'\r\n\r\nexport default function Game() {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <Settings />\r\n            <Board />\r\n            <div className=\"new-game\">\r\n                <button onClick={e => dispatch(resetGame())}>New Game</button>\r\n            </div>\r\n            <Statistics />\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Game from './components/Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Tic Tac Toe</h1>\n\n      <Game />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const game = {\r\n    board: [\r\n        ['', '', ''],\r\n        ['', '', ''],\r\n        ['', '', '']\r\n    ],\r\n    player: 'x',\r\n    movesCount: 0,\r\n    lastMove: {\r\n        x: -1,\r\n        y: -1,\r\n    },\r\n    isGameOver: false\r\n}\r\n\r\nconst gameReducer = (state = game, action) => {\r\n    switch (action.type) {\r\n        case 'SET':\r\n            return action.game\r\n        case 'PLAY':\r\n            return {\r\n                board: [\r\n                    ...state.board.slice(0, action.pos.x),\r\n                    [\r\n                        ...state.board[action.pos.x].slice(0, action.pos.y),\r\n                        state.player,\r\n                        ...state.board[action.pos.x].slice(action.pos.y + 1, state.board.length)\r\n                    ],\r\n                    ...state.board.slice(action.pos.x + 1, state.board.length)\r\n                ],\r\n                player: state.player === 'x' ? 'o' : 'x',\r\n                lastMove: action.pos,\r\n                movesCount: state.movesCount + 1,\r\n                isGameOver: state.movesCount + 1 === 9\r\n            }\r\n        case 'OVER':\r\n            return {\r\n                ...state,\r\n                isGameOver: true\r\n            }\r\n        case 'SWITCH':\r\n            return {\r\n                ...state,\r\n                player: state.player === 'x' ? 'o' : 'x'\r\n            }\r\n        case 'RESET':\r\n            return {\r\n                ...state,\r\n                board: game.board,\r\n                lastMove: game.lastMove,\r\n                movesCount: game.movesCount,\r\n                isGameOver: game.isGameOver\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default gameReducer;","const statistics = {\r\n    wins: 0,\r\n    losses: 0,\r\n    draws: 0\r\n}\r\n\r\nconst statisticsReducer = (state = statistics, action) => {\r\n    switch (action.type) {\r\n        case 'WIN':\r\n            return { ...state, wins: state.wins + 1 }\r\n        case 'LOST':\r\n            return { ...state, losses: state.losses + 1 }\r\n        case 'DRAW':\r\n            return { ...state, draws: state.draws + 1 }\r\n        case 'SET':\r\n            return action.statistics\r\n        case 'CLEAR':\r\n            return statistics\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default statisticsReducer;","const isAiPlayingReducer = (state = true, actiion) => {\r\n    switch (actiion.type) {\r\n        case 'HUMAIN':\r\n            return false\r\n        case 'AI':\r\n            return true\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default isAiPlayingReducer;","const levelReduicer = (state = 1, action) => {\r\n    switch (action.type) {\r\n        case 'DUMB':\r\n            return 0\r\n        case 'MEDIUM':\r\n            return 1\r\n        case 'HARD':\r\n            return 2\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default levelReduicer;","import gameReducer from './game';\r\nimport statisticsReducer from './statistics';\r\nimport isAiPlayingReducer from './isAiPlaying';\r\nimport levelReduicer from './level'\r\nimport { combineReducers } from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    game: gameReducer,\r\n    statistics: statisticsReducer,\r\n    isAiPlaying: isAiPlayingReducer,\r\n    level: levelReduicer\r\n})\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport allReducers from './reducers';\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}