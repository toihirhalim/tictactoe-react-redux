{"version":3,"sources":["components/Case.js","components/Board.js","actions/index.js","App.js","reportWebVitals.js","reducers/game.js","reducers/statistics.js","reducers/index.js","index.js"],"names":["Case","index","value","lastplayed","playAtPosition","className","onClick","e","Board","board","useSelector","state","game","lastMove","dispatch","useDispatch","pos","type","play","map","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","player","gameReducer","action","slice","length","statisticsReducer","stat","allReducers","combineReducers","stats","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAEe,SAASA,EAAT,GAA6D,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAKrD,OACI,qBAAKC,UAAWF,EAAa,kBAAoB,OAAQG,QALzC,SAAAC,GACF,KAAVL,GACJE,EAAeH,IAGf,SACI,4BAAIC,M,WCJD,SAASM,IACpB,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,SACxCI,EAAWH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,YAC3CC,EAAWC,cAEXX,EAAiB,SAAAY,GACnBF,ECLY,SAACE,GACjB,MAAO,CACHC,KAAM,OACND,ODESE,CAAKF,KAGlB,OACI,qBAAKX,UAAU,QAAf,SAEQI,EAAMU,KAAI,SAACjB,EAAOkB,GACd,OAAQ,cAACpB,EAAD,CAEJC,MAAOmB,EACPjB,WAAYU,IAAaO,EACzBlB,MAAOA,EACPE,eAAgBA,GAJXgB,QELdC,MAXf,WACE,OACE,sBAAKhB,UAAU,MAAf,UACE,6CAEA,cAACG,EAAD,QCISc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCPRX,EAAO,CACTH,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxCsB,OAAQ,IACRlB,UAAW,GAiCAmB,EA9BK,WAA2B,IAA1BrB,EAAyB,uDAAjBC,EAAMqB,EAAW,uCAC1C,OAAQA,EAAOhB,MACX,IAAK,MACD,OAAOgB,EAAOrB,KAClB,IAAK,OACD,MAAO,CACHH,MAAM,GAAD,mBACEE,EAAMF,MAAMyB,MAAM,EAAGD,EAAOjB,MAD9B,CAEDL,EAAMoB,QAFL,YAGEpB,EAAMF,MAAMyB,MAAMD,EAAOjB,IAAM,EAAGL,EAAMwB,UAE/CJ,OAAyB,MAAjBpB,EAAMoB,OAAiB,IAAM,IACrClB,SAAUoB,EAAOjB,KAEzB,IAAK,SACD,OAAO,2BACAL,GADP,IAEIoB,OAAyB,MAAjBpB,EAAMoB,OAAiB,IAAM,MAE7C,IAAK,QACD,OAAO,2BACApB,GADP,IAEIF,MAAOG,EAAKH,MACZI,SAAUD,EAAKC,WAEvB,QACI,OAAOF,ICrBJyB,EAXW,WAAyB,IAAxBzB,EAAuB,uDAAf,GAAIsB,EAAW,uCAC9C,OAAQA,EAAOhB,MACX,IAAK,MACD,MAAM,GAAN,mBAAWN,GAAX,CAAkBsB,EAAOI,OAC7B,IAAK,QACD,MAAO,GACX,QACI,OAAO1B,ICEJ2B,EALKC,YAAgB,CAChC3B,KAAMoB,EACNQ,MAAOJ,ICGLK,EAAQC,YAAYJ,GAE1BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.7cc829d2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Case({ index, value, lastplayed, playAtPosition }) {\r\n    const handleClick = e => {\r\n        if (value !== '') return\r\n        playAtPosition(index)\r\n    }\r\n    return (\r\n        <div className={lastplayed ? \"case red-border\" : \"case\"} onClick={handleClick}>\r\n            <p>{value}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Case from './Case'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { play } from '../actions'\r\n\r\nexport default function Board() {\r\n    const board = useSelector(state => state.game.board)\r\n    const lastMove = useSelector(state => state.game.lastMove)\r\n    const dispatch = useDispatch()\r\n\r\n    const playAtPosition = pos => {\r\n        dispatch(play(pos))\r\n    }\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            {\r\n                board.map((value, key) => {\r\n                    return (<Case\r\n                        key={key}\r\n                        index={key}\r\n                        lastplayed={lastMove === key}\r\n                        value={value}\r\n                        playAtPosition={playAtPosition}\r\n                    />)\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export const setGame = game => {\r\n    return {\r\n        type: 'SET',\r\n        game\r\n    }\r\n}\r\nexport const play = (pos) => {\r\n    return {\r\n        type: 'PLAY',\r\n        pos,\r\n    }\r\n}\r\nexport const switchPlayer = () => {\r\n    return {\r\n        type: 'SWITCH'\r\n    }\r\n}\r\nexport const resetGame = () => {\r\n    return {\r\n        type: 'RESET'\r\n    }\r\n}\r\n\r\nexport const addStatistic = stat => {\r\n    return {\r\n        type: 'ADD',\r\n        stat\r\n    }\r\n}\r\n\r\nexport const clearStatatistics = () => {\r\n    return {\r\n        type: 'CLEAR',\r\n    }\r\n}","import './App.css';\nimport Board from './components/Board'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Tic Tac Toe</h1>\n\n      <Board />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const game = {\r\n    board: ['', '', '', '', '', '', '', '', ''],\r\n    player: 'x',\r\n    lastMove: -1\r\n}\r\n\r\nconst gameReducer = (state = game, action) => {\r\n    switch (action.type) {\r\n        case 'SET':\r\n            return action.game\r\n        case 'PLAY':\r\n            return {\r\n                board: [\r\n                    ...state.board.slice(0, action.pos),\r\n                    state.player,\r\n                    ...state.board.slice(action.pos + 1, state.length)\r\n                ],\r\n                player: state.player === 'x' ? 'o' : 'x',\r\n                lastMove: action.pos\r\n            }\r\n        case 'SWITCH':\r\n            return {\r\n                ...state,\r\n                player: state.player === 'x' ? 'o' : 'x'\r\n            }\r\n        case 'RESET':\r\n            return {\r\n                ...state,\r\n                board: game.board,\r\n                lastMove: game.lastMove\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default gameReducer;","const statisticsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            return [...state, action.stat]\r\n        case 'CLEAR':\r\n            return []\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default statisticsReducer;","import gameReducer from './game';\r\nimport statisticsReducer from './statistics';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    game: gameReducer,\r\n    stats: statisticsReducer,\r\n})\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport allReducers from './reducers';\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}